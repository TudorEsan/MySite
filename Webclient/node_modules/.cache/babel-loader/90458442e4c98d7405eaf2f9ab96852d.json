{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tudoresan/Desktop/MySite/Webclient/src/containers/Contact/Contact.js\";\nimport React, { useState } from 'react';\nimport { TextField, Container, Grid, Button } from '@material-ui/core';\nimport { withRouter } from 'react-router';\nimport { sendMessage } from '../../Data/Api/MessageApi';\nimport { useForm } from \"react-hook-form\";\nimport { useEffect } from 'react';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nclass Contact extends React.Component {\n  constructor() {\n    super();\n\n    this.onSubmit = async e => {// e.preventDefault();\n      // const { name, email, subject, body } = e.target;\n      // const message = {\n      //     name: name.value,\n      //     body: body.value,\n      //     ...(!!subject.value && {subject: subject.value}),\n      //     ...(!!email.value && {email: email.value})\n      // }; \n      // sendMessage(message);\n    };\n\n    this.onChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({ ...this.state,\n        [name]: value\n      });\n    };\n\n    this.state = {\n      name: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n          ref: \"form\",\n          instantValidate: true,\n          onError: e => {\n            console.log(e);\n          },\n          onSubmit: onSubmit,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                id: \"outlined-basic\",\n                label: \"Name\",\n                variant: \"outlined\",\n                name: \"name\",\n                value: this.state.name,\n                onChange: this.onChange,\n                validators: ['required'],\n                errorMessages: ['this field is required'],\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                id: \"outlined-basic\",\n                label: \"Email\",\n                variant: \"outlined\",\n                name: \"email\",\n                validators: ['required', 'isEmail'],\n                errorMessages: ['this field is required', 'this is not an email'],\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                id: \"outlined-basic\",\n                label: \"Subject\",\n                variant: \"outlined\",\n                name: \"subject\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                id: \"outlined-basic\",\n                label: \"Message\",\n                variant: \"outlined\",\n                name: \"body\",\n                fullWidth: true,\n                multiline: true,\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              children: \" Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Contact);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tudoresan/Desktop/MySite/Webclient/src/containers/Contact/Contact.js"],"names":["React","useState","TextField","Container","Grid","Button","withRouter","sendMessage","useForm","useEffect","ValidatorForm","TextValidator","Contact","Component","constructor","onSubmit","e","onChange","value","name","target","setState","state","render","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { TextField, Container, Grid, Button } from '@material-ui/core';\nimport { withRouter } from 'react-router';\nimport { sendMessage } from '../../Data/Api/MessageApi';\nimport { useForm } from \"react-hook-form\";\nimport { useEffect } from 'react';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nclass Contact extends React.Component {\n\n\n    constructor() {\n        super();\n        this.state = {\n            name: \"\"\n        }\n    }\n\n    onSubmit = async (e) => {\n        // e.preventDefault();\n        // const { name, email, subject, body } = e.target;\n        // const message = {\n        //     name: name.value,\n        //     body: body.value,\n        //     ...(!!subject.value && {subject: subject.value}),\n        //     ...(!!email.value && {email: email.value})\n        // }; \n\n        // sendMessage(message);\n    }\n\n    onChange = (e) => {\n        const {value, name} = e.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n    }\n    render(){\n        return (\n            <div>\n                <Container maxWidth='sm' >\n                    <h1>Contact</h1>\n                    <ValidatorForm ref=\"form\" instantValidate={true} onError={(e) => {console.log(e)}} onSubmit={onSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextValidator id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" \n                                name='name' value={this.state.name} onChange={this.onChange} validators={['required']} \n                                errorMessages={['this field is required']} fullWidth/>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextValidator id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" name='email' validators={['required', 'isEmail']} errorMessages={['this field is required', 'this is not an email']} fullWidth/>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextValidator id=\"outlined-basic\" label=\"Subject\" variant=\"outlined\" name='subject' fullWidth/>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextValidator id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" name='body' fullWidth multiline rows={3}/>\n                            </Grid>\n                            <Button type=\"submit\" variant=\"contained\"> Send</Button>\n                        </Grid>\n                    </ValidatorForm>\n                </Container>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Contact)\n"]},"metadata":{},"sourceType":"module"}